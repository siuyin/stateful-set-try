apiVersion: v1
kind: Service
metadata:
  name: stan
  labels:
    app: nats-streaming-client
    sys: test
spec:
  clusterIP: None     # None makes this a headless service. pods nsclient-[01].stan directly accessible
  #type: ClusterIP    # this is the default type
  ports:
  - port: 8080
  selector:
    app: nats-streaming-client
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nsclient
spec:
  selector:
    matchLabels:
      app: nats-streaming-client # has to match .spec.template.metadata.labels
      sys: test
  serviceName: stan
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: nats-streaming-client # has to match .spec.selector.matchLabels
        sys: test
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: nsclient
        image: siuyin/nsclient:v6
#        volumeMounts:             # you don't have to have volumes, eg. it could talk to a mounted DB
#        - name: data              # but if you do have persistent volumes, you need to pre-provision with
#          mountPath: /data        # the storage class name below.
#  volumeClaimTemplates:
#  - metadata:
#      name: data
#    spec:
#      accessModes: [ "ReadWriteOnce" ]
#      storageClassName: "nats-streaming-client-storage-class"
#      resources:
#        requests:
#          storage: 1Gi
